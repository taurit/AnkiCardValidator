<Window
    x:Class="BookToAnki.UI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:BookToAnki.UI.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:BookToAnki.UI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="clr-namespace:ValueConverters;assembly=ValueConverters"
    xmlns:viewModels="clr-namespace:BookToAnki.UI.ViewModels"
    xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
    Title="Book to Anki Deck converter"
    Width="1200"
    Height="800"
    d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
    AllowDrop="True"
    mc:Ignorable="d">
    <Window.Resources>
        <valueConverters:BoolInverter x:Key="BoolInverter" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="22" />
        </Grid.RowDefinitions>

        <!--  Toolbar  -->
        <Menu
            x:Name="MainMenu"
            Grid.Row="0"
            Grid.ColumnSpan="3"
            d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}">

            <MenuItem Header="Data set operations" IsEnabled="{Binding IsBusy, Converter={StaticResource 'BoolInverter'}}">
                <MenuItem Click="PrimeStressCachesButton_OnClick" Header="Prime stress caches" />
                <MenuItem Click="PrimeAudioCachesButton_OnClick" Header="Prime audio caches" />
                <MenuItem Click="PrimeGptCacheButton_OnClick" Header="Prime ChatGPT4 answer cache" />
                <MenuItem Click="ClassifyWordsIntoPartsOfSpeech_OnClick" Header="Classify words into categories (GPT 4 API)" />
            </MenuItem>
            <MenuItem Header="Anki deck preparation" IsEnabled="{Binding IsBusy, Converter={StaticResource 'BoolInverter'}}">
                <MenuItem Click="StartWordLinkingFlow_OnClick" Header="Start word linking flow" />
                <MenuItem Click="RateNotes_OnClick" Header="Review and rate card candidates" />
            </MenuItem>
        </Menu>

        <!--  Left Side  -->
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="250" />
            </Grid.RowDefinitions>
            <TextBox Grid.Row="0" Text="{Binding SearchBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <DataGrid
                Name="WordsDataGrid"
                Grid.Row="1"
                d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}"
                AutoGenerateColumns="False"
                Background="White"
                CanUserSortColumns="True"
                HorizontalGridLinesBrush="LightGray"
                IsEnabled="{Binding IsBusy, Converter={StaticResource 'BoolInverter'}}"
                IsReadOnly="False"
                ItemsSource="{Binding Words}"
                PreviewKeyDown="WordsDataGrid_OnPreviewKeyDown"
                SelectedItem="{Binding SelectedWord}"
                SelectionChanged="WordsDataGrid_SelectionChanged"
                SelectionMode="Single"
                VerticalGridLinesBrush="LightGray">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="2*"
                        Binding="{Binding Word.Word, Mode=OneTime}"
                        Header="Word"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding Occurrences}"
                        Header="Occurrences"
                        IsReadOnly="True"
                        SortDirection="Descending" />
                    <DataGridTextColumn
                        Width="30"
                        Binding="{Binding HasPictureText, Mode=OneWay}"
                        Header="Has picture"
                        IsReadOnly="True" />
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="FontWeight" Value="Bold" />

                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
            <GridSplitter
                Grid.Row="2"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                ResizeDirection="Rows" />
            <DataGrid
                Name="SimilarWordsDataGrid"
                Grid.Row="3"
                d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}"
                AutoGenerateColumns="False"
                Background="White"
                CanUserSortColumns="False"
                HorizontalGridLinesBrush="LightGray"
                IsEnabled="{Binding IsBusy, Converter={StaticResource 'BoolInverter'}}"
                IsReadOnly="False"
                ItemsSource="{Binding SimilarWords}"
                MouseDoubleClick="SimilarWordsDataGrid_OnMouseDoubleClick_ToggleLink"
                SelectedItem="{Binding SelectedSimilarWord}"
                SelectionChanged="SimilarWordsDataGrid_SelectionChanged"
                SelectionMode="Single"
                VerticalGridLinesBrush="LightGray"
                VerticalScrollBarVisibility="Visible">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="2*"
                        Binding="{Binding Word.Word, Mode=OneTime}"
                        CanUserSort="True"
                        Header="Words with same meaning, gender, formality, that can share image"
                        IsReadOnly="True"
                        SortDirection="Ascending" />
                    <!--<DataGridTextColumn
                        Width="*"
                        Binding="{Binding Occurrences}"
                        CanUserSort="True"
                        Header="Occurrences"
                        IsReadOnly="True" />-->
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding SimilarityScore, StringFormat=N3}"
                        CanUserSort="True"
                        Header="Similarity"
                        IsReadOnly="True"
                        SortDirection="Descending"
                        SortMemberPath="SimilarityScore" />
                    <DataGridTextColumn
                        Width="30"
                        Binding="{Binding HasPictureText, Mode=OneWay}"
                        Header="Has picture"
                        IsReadOnly="True" />
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLinkedToSelectedWord, Mode=OneWay}" Value="true">
                                <Setter Property="Foreground" Value="LimeGreen" />
                                <Setter Property="FontWeight" Value="Heavy" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsLinkedToNonSelectedWord, Mode=OneWay}" Value="true">
                                <Setter Property="Foreground" Value="MediumVioletRed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
        </Grid>

        <!--  Grid Splitter  -->
        <GridSplitter
            Grid.Row="1"
            Grid.Column="1"
            Width="5"
            HorizontalAlignment="Stretch" />

        <!--  Right Side  -->
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="4*" />
            </Grid.RowDefinitions>

            <!--  Top Half  -->
            <DataGrid
                Name="UsageDataGrid"
                Grid.Row="0"
                d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}"
                AutoGenerateColumns="False"
                Background="White"
                HorizontalGridLinesBrush="LightGray"
                IsEnabled="{Binding IsBusy, Converter={StaticResource 'BoolInverter'}}"
                IsReadOnly="True"
                ItemsSource="{Binding SelectedWordUsages}"
                SelectedItem="{Binding SelectedWordUsage}"
                SelectionChanged="UsageDataGrid_SelectionChanged"
                SelectionMode="Single"
                VerticalGridLinesBrush="LightGray">
                <DataGrid.Columns>

                    <DataGridTemplateColumn Width="*" Header="Usage example">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <TextBlock Padding="7,0">
                                        <Run Text="{Binding SentenceText, Mode=OneTime}" />
                                    </TextBlock>
                                </DockPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn
                        Width="95"
                        Binding="{Binding TranscriptMatchesCount, Mode=OneTime}"
                        CanUserSort="True"
                        Header="Audio samples"
                        IsReadOnly="True" />

                    <DataGridTextColumn
                        Width="50"
                        Binding="{Binding QualityPenalty, Mode=OneTime}"
                        CanUserSort="True"
                        Header="Penalty"
                        IsReadOnly="True" />
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Rating}" Value="Rejected">
                                <Setter Property="Background" Value="DeepPink" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Rating}" Value="AcceptableForPragmatics">
                                <Setter Property="Background" Value="PeachPuff" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Rating}" Value="Premium">
                                <Setter Property="Background" Value="GreenYellow" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Rating}" Value="Rejected" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="DeepPink" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>

            <GridSplitter
                Grid.Row="1"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />

            <!--  Bottom Half  -->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="300" />
                </Grid.ColumnDefinitions>
                <Border BorderBrush="Gray" BorderThickness="1">
                    <wv2:WebView2 Name="CardPreview" />
                </Border>
                <Border
                    Grid.Column="2"
                    BorderBrush="Gray"
                    BorderThickness="1">
                    <components:PictureSelector x:Name="PictureSelector" />
                </Border>
            </Grid>
        </Grid>

        <StatusBar
            Name="MainWindowStatusBar"
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}">
            <WrapPanel>
                <TextBlock
                    Margin="0,0,20,0"
                    Foreground="Green"
                    MouseDown="MoneyCounter_OnMouseDown"
                    Text="{Binding TotalCostUsd}" />

                <TextBlock
                    Margin="0,0,20,0"
                    Foreground="CornflowerBlue"
                    MouseDown="MoneyCounter_OnMouseDown"
                    Text="{Binding TotalCostPlnWithTax}" />
                <TextBlock
                    Margin="0,0,3,0"
                    Foreground="Red"
                    Text="{Binding StartupTime.TotalMilliseconds}" />
                <TextBlock Margin="0,0,20,0" Foreground="Red">ms</TextBlock>

                <TextBlock>Unique words in all books:</TextBlock>
                <TextBlock Margin="5,0,20,0" Text="{Binding NumberUniqueWordsInAllProcessedBooks}" />

                <TextBlock>Num words in a left panel:</TextBlock>
                <TextBlock Margin="5,0,20,0" Text="{Binding Words.Count}" />

                <TextBlock>Ratio of words that have pictures:</TextBlock>
                <TextBlock
                    Margin="5,0,20,0"
                    Foreground="Goldenrod"
                    Text="{Binding HasPictureRatio, Mode=OneWay}" />
            </WrapPanel>
        </StatusBar>
    </Grid>
</Window>
