<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <UserSecretsId>FlashcardSpace.Toolkit</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="8.0.0" />
    <PackageReference Include="Spectre.Console.Cli" Version="0.49.1" />
    <PackageReference Include="Spectre.Console.Registrars.Microsoft-Di" Version="0.5.0" />
    <PackageReference Include="vertical-spectreconsolelogger" Version="0.10.1-dev.20240326.31" />
  </ItemGroup>

  <ItemGroup>
    
    <ProjectReference Include="..\CoreLibrary\CoreLibrary.csproj" />
    
	<!-- Refactoring to consider:
	
			Change relation between GenerateFlashcards and Building Blocks projects
			from compile-time dependency to runtime dependency (and remove references below).
	
			This will be a natural step if we want an architecture that allows plugins developed
			in other repositories.
			
			I start with tightly coupled projects for simplicity, though.
			
	-->
  </ItemGroup>

  <ItemGroup>
    <None Update="Resources\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Resources\PreviewApp\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Resources\FrequencyDictionaries\*.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="GenerateFlashcards.Tests" />
  </ItemGroup>
  
</Project>
